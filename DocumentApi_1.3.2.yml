AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Application that establishes an API suited for working with documents
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-document-api
    Description: Application that implements an API for handling documents created
      by Thetis IMS
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/4612b8d5aa75b9b9936c9b7b9e6c7e82
    ReadmeUrl: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/40e0e6f7e753aca24edb961977fe8847
    Labels:
    - thetis-ims
    HomePageUrl: https://github.com/thetis-apps/DocumentApi
    SemanticVersion: 1.3.2
    SourceCodeUrl: https://github.com/thetis-apps/DocumentApi
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs16.x
Parameters:
  FrontendUrl:
    Type: String
    Description: The URL at which the frontend is deployed
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
    MinLength: '1'
  ClientId:
    Description: Key of the parameter that has your Thetis client id as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Description: Key of the parameter that has your Thetis client secret as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  ApiKey:
    Description: The api key that gives access to the context in Thetis IMS.
    Type: String
    MinLength: 1
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter
      queue.
    Type: String
    MinLength: 4
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowHeaders: '''Access-Control-Allow-Origin,x-requested-with,content-type'''
        AllowOrigin:
          Fn::Sub: '''${FrontendUrl}'''
    Metadata:
      SamResourceId: Api
  GetPendingMultiPickingLists:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.getPendingMultiPickingLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /pendingMultiPickingLists
            Method: get
    Metadata:
      SamResourceId: GetPendingMultiPickingLists
  GetPendingPutAwayLists:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.getPendingPutAwayLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /pendingPutAwayLists
            Method: get
    Metadata:
      SamResourceId: GetPendingPutAwayLists
  GetPendingReplenishmentLists:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.getPendingReplenishmentLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /pendingReplenishmentLists
            Method: get
    Metadata:
      SamResourceId: GetPendingReplenishmentLists
  GetPendingStockTakingLists:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.getPendingStockTakingLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /pendingStockTakingLists
            Method: get
    Metadata:
      SamResourceId: GetPendingStockTakingLists
  PutMultiPickingList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.putMultiPickingList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /multiPickingLists/{id}
            Method: put
    Metadata:
      SamResourceId: PutMultiPickingList
  PutPutAwayList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.putPutAwayList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /putAwayLists/{id}
            Method: put
    Metadata:
      SamResourceId: PutPutAwayList
  PutReplenishmentList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.putReplenishmentList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /replenishmentLists/{id}
            Method: put
    Metadata:
      SamResourceId: PutReplenishmentList
  PutStockTakingList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/d588bdb8499dffb52bf82d2992a7207e
      Handler: api.putStockTakingList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /stockTakingLists/{id}
            Method: put
    Metadata:
      SamResourceId: PutStockTakingList
Outputs:
  Api:
    Description: API Gateway endpoint URL for Prod stage for Multi Picking function
    Value:
      Fn::Sub: https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod
