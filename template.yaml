AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Application that establishes an API suited for working with documents
  
# Metadata to use for the publishing to the SAR
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-document-api
    Description: Application that implements an API for handling documents created by Thetis IMS
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['thetis-ims']
    HomePageUrl: https://github.com/thetis-apps/DocumentApi
    SemanticVersion: 3.0.8
    SourceCodeUrl: https://github.com/thetis-apps/DocumentApi

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs16.x

# Parameters of the application 
Parameters:
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
    MinLength: '1'
  ClientId:
    Description: Key of the parameter that has your Thetis client id as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Description: Key of the parameter that has your Thetis client secret as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  WebAcl:
    Description: Key of the parameter that has a WAF to use for publicly exposed endpoints as its value
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisWebAcl
  ApiKey:
    Description: The api key that gives access to the context in Thetis IMS.
    Type: String
    MinLength: 1
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter queue.
    Type: String
    MinLength: 4
    
Conditions:
  IsYarnliving: !Equals 
    - !Ref ContextId
    - 628
  IsCapida: !Equals
    - !Ref ContextId
    - 572

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14  
      
  Api:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: 3.0.1      
      StageName: Prod
      Cors:
        AllowHeaders: "'Access-Control-Allow-Origin,x-requested-with,content-type'"
        AllowOrigin: !If [IsYarnliving, "'https://yarnliving.thetis-apps.net'", !If [IsCapida, "'https://capida.thetis-apps.net'", !Sub "'https://public-${ContextId}.thetis-apps.net'"]]
      AccessLogSetting:
        DestinationArn: !GetAtt LogGroup.Arn
        Format: $context.identity.sourceIp,$context.identity.caller,$context.identity.user,$context.requestTime,$context.httpMethod,$context.resourcePath,$context.protocol,$context.status,$context.responseLength,$context.requestId,$context.extendedRequestId
      TracingEnabled: true
      
  WebAclAssociation:  
    Type: AWS::WAFv2::WebACLAssociation
    Properties: 
      ResourceArn: !Sub "arn:aws:apigateway:${AWS::Region}::/restapis/${Api}/stages/${Api.Stage}"
      WebACLArn: !Ref WebAcl

  GetPendingMultiPickingLists:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.getPendingMultiPickingLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /pendingMultiPickingLists
            Method: get
            
  GetPendingPutAwayLists:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.getPendingPutAwayLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /pendingPutAwayLists
            Method: get
  
  GetPendingReplenishmentLists:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.getPendingReplenishmentLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /pendingReplenishmentLists
            Method: get

  GetPendingStockTakingLists:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.getPendingStockTakingLists
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /pendingStockTakingLists
            Method: get
            
  PutMultiPickingList:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.putMultiPickingList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /multiPickingLists/{id}
            Method: put

  PutPutAwayList:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.putPutAwayList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /putAwayLists/{id}
            Method: put

  PutReplenishmentList:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.putReplenishmentList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /replenishmentLists/{id}
            Method: put
            
  PutStockTakingList:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.putStockTakingList
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /stockTakingLists/{id}
            Method: put
            
Outputs:
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Multi Picking function"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod"
