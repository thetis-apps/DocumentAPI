AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Application that establishes an API suited for working with documents
  
# Metadata to use for the publishing to the SAR
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-document-api
    Description: Application that establishes an API suited for working with documents.
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['thetis-ims']
    HomePageUrl: https://github.com/thetis-apps/DocumentApi
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/thetis-apps/DocumentApi

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

# Parameters of the application 
Parameters:
  FrontendUrl:
    Type: String
    Description: The URL at which the frontend is deployed
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
    MinLength: '1'
  ClientId:
    Description: Key of the parameter that has your Thetis client id as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Description: Key of the parameter that has your Thetis client secret as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  ApiKey:
    Description: The api key that gives access to the context in Thetis IMS.
    Type: String
    MinLength: 1
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter queue.
    Type: String
    MinLength: 4

Resources:

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowHeaders: "'Access-Control-Allow-Origin,x-requested-with,content-type'"
        AllowOrigin: !Sub "'${FrontendUrl}'" 

  GetPendingMultiPickingLists:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.getPendingMultiPickingLists
      Runtime: nodejs12.x
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /pendingMultiPickingLists
            Method: get
            
  PutMultiPickingListStatus:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: api.putMultiPickingListStatus
      Runtime: nodejs12.x
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: Api
            Path: /multiPickingLists/{id}/workStatus
            Method: put

Outputs:
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Multi Picking function"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod"
